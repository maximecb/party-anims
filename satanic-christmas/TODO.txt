TODO: clone pyopendmx repo

TODO: make the Christmas animation slowly fade and only start the lines
after 1 or 2 seconds for dramatic effect

TODO: test on projector screen in the dark
- need to know if this is actually feasible

TODO: try to alternate animations every 10s
TODO: plain hs fadeout animation

TODO: modify the code to use the animation class

TODO: write the Merry Christmas animation class
- make it just fade Merry Christmas for now?

-----------------------------------------------------------------------------

Idea: we can randomly cycle animations every 32 or 64 beats
Going into k mode will only select that animation in or out

TODO: Merry Christmas with glitching
- glitch to hs at random frames
=> we can pre-render a few glitch frames of both

TODO: could we increase the glitch intensity when there's a beat?
- increase then decay

TODO: pre-render frames for rescue anim
- make it smoother
=> do the logic for pre-rendering frames first






[DONE] TODO: code to detect r, k, n and switch mode
- draw a small square on the left or right

[DONE] TODO: try to implement animation switching code. Every 16 or 32 beats

[DONE] TODO: random vertical shift in glitch fn

[DONE] TODO: rescue glitch anim

[DONE] TODO: glitch fn

[DONE] TODO: make KORHAL anim mod8

[DONE] TODO: try to program KORHAL animation

[DONE] TODO: try to draw red lines between letter coordinates

[DONE] TODO: test with projector on the wall

[DONE] TODO: try alternating every two beats.
- may be able not to clear the buffer

[DONE] TODO: option for a simulated beat
--sim_beat

[DONE] TODO: get a simple alternating animation going
- beat-driven
=> KISS

-----------------------------------------------------------------------------

[DONE] TODO: try to set up animation loop with fixed frame rate
- need to figure out current frame rate, time since last frame?
- compute effective fps, how much delay to add
t = time.time()

[DONE] TODO: fix wifi problem

[DONE] TODO: send a UDP packet on every beat to this device

[DONE] TODO: try to create line fading animation
np.random.randint(low, high=None, size=None, dtype=int)
Return random integers from low (inclusive) to high (exclusive).

[DONE] TODO: setup repo with deploy keys

[DONE] TODO: test line drawing

[DONE] TODO: check that opencv freetype2 works

[DONE] TODO: look for CC-0 TTF fonts
